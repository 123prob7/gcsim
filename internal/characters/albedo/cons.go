package albedo

import (
	"github.com/genshinsim/gcsim/pkg/core/attributes"
	"github.com/genshinsim/gcsim/pkg/core/combat"
	"github.com/genshinsim/gcsim/pkg/core/player/character"
	"github.com/genshinsim/gcsim/pkg/core/player/shield"
	"github.com/genshinsim/gcsim/pkg/modifier"
)

const (
	//Transient Blossoms generated by Abiogenesis: Solar Isotoma grant Albedo Fatal Reckoning for 30s:
	//• Unleashing Rite of Progeniture: Tectonic Tide consumes all stacks of Fatal Reckoning. Each stack of Fatal Reckoning consumed increases the DMG dealt by Fatal Blossoms and Rite of Progeniture: Tectonic Tide's burst DMG by 30% of Albedo's DEF.
	//• This effect stacks up to 4 times.
	c2key = "albedo-c2"
)

// c4: active member +30% plunge attack in skill field
func (c *char) c4() {
	m := make([]float64, attributes.EndStatType)
	m[attributes.DmgP] = 0.3
	for _, char := range c.Core.Player.Chars() {
		this := char
		char.AddAttackMod(character.AttackMod{
			Base: modifier.NewBase("albedo-c4", -1),
			Amount: func(atk *combat.AttackEvent, _ combat.Target) ([]float64, bool) {
				if c.Core.Player.Active() != this.Index {
					return nil, false
				}
				if atk.Info.AttackTag != combat.AttackTagPlunge {
					return nil, false
				}
				if !c.skillActive {
					return nil, false
				}
				return m, true
			},
		})
	}
}

// c6: active protected by crystallize +17% dmg
func (c *char) c6() {
	m := make([]float64, attributes.EndStatType)
	m[attributes.DmgP] = 0.17
	c.AddStatMod(character.StatMod{
		Base:         modifier.NewBase("albedo-c6", -1),
		AffectedStat: attributes.DmgP,
		Amount: func() ([]float64, bool) {
			if !c.skillActive {
				return nil, false
			}
			if c.Core.Player.Shields.Get(shield.ShieldCrystallize) == nil {
				return nil, false
			}
			return m, true
		},
	})
}
